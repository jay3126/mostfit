%table.shaded
  %tr
    %th
      Name
    %td
      = text_field :insured_name
  %tr
    %th
      Insured Type
    %td
      %span.greytext
      = select :insured_type, :collection => Constants::Insurance::INSURANCE_TYPES.map{|c| [c.to_s, c.to_s.humanize]}
  %tr
    %th
      Insurance For
    %td
      = select :insurance_for, :collection => Constants::Insurance::INSURED_PERSON_RELATIONSHIPS.map{|c| [c.to_s, c.to_s.humanize]}
  %tr
    %th
      Proposed On
    %td
      %span.greytext
      = date_select_for @policy, :proposed_on
  %tr
    %th
      Insured On
    %td
      %span.greytext
      = date_select_for @policy, :insured_on
  %tr
    %th
      Expires On
    %td
      %span.greytext
      = date_select_for @policy, :expires_on
  %tr
    %th
      Insured Amount
    %td
      = text_field :insured_amount
  %tr
    %th
      Currency
    %td
      %span.greytext
      = select :currency, :collection => Constants::Money::CURRENCIES.map {|currency| [currency]}
  %tr
    %th
      Issued Status
    %td
      = select :issued_status, :collection => Constants::Insurance::INSURANCE_ISSUED_STATUSES.map{|c| [c.to_s, c.to_s.humanize]}
  %tr
    %th
      Client
    %td
      = select :name => 'client_id', :collection => Client.all.map{|c| [c.id, c.name]}, :selected => "#{@policy.client.blank? ? '' : @policy.client.id}"
  %tr
    %th
      Insurance Product
    %td
      = select :name => 'simple_insurance_product_id', :collection => SimpleInsuranceProduct.all.map{|p| [p.id, p.name]}, :selected => "#{@policy.simple_insurance_product.blank? ? '' : @policy.simple_insurance_product.id}"
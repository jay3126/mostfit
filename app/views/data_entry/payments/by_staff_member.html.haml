:javascript
  function load_centers() {
    $("#paying_center_selector").html('');
    $.ajax({
      type: "GET",
      url: "/branches/centers/"+$("#paying_branch_selector").val()+"?paying=true&date=" + $("#for_date").val(),
      success: function(data){
        $("#paying_center_selector").html(data);
      }
    });
  }

  $(document).ready(function() {
    $("#paying_branch_selector").change(function(){
      load_centers();
    });
    $("#for_date").change(function(){
      load_centers();
    });
  });
- if @staff_member and @date
  %h1
    Payments collected by
    = link_to "StaffMember #{@staff_member.name}", resource(@staff_member)
    on
    = @date 

  - if not @errors.blank?
    .error
      - if @errors.is_a?(Array)
        - @errors.each do |error|
          == Loan <b>#{error.resource.class == Payment ? error.resource.loan.id : error.resource.id} :</b>
          = error.values.join("*")
          %br
      - else
        - @errors.each do |error|
          = error
          %br        
  - fees_payable       = @fee_paying_things.values.inject({}){|s,x| s+=x}.length
  %div.tab_container
    %ul.tabs
      %li#repayments
        Repayments
        %b
          (
          = LoanHistory.all(:date => @date, :loan_id => @loan_ids, :status => [:outstanding]).count
          )
      %li#repayments
        Approvals
        %b        
          = "(#{@loans_to_approve.size})"
      %li#dishbursals
        Disbursals
        %b
          = "(#{@loans_to_disburse.size})"
      %li#fees
        Fees payments
        %b
          = "(#{@fee_paying_things.values.reject{|v| v.empty?}.count})"
      %li#luc
        Loan utilization check 
        %b
          = "(#{@loans_to_utilize.size})"
    %div.tab    
      %h1 Repayments
      = form_for(@payment, :action => url(:enter_payments, :action => 'by_staff_member', :class => "_disable_button_")) do
        = hidden_field :name => 'staff_member_id', :value => @staff_member.id
        = partial :staff_member_payments
        = submit 'Make Repayments'
    %div.tab
      %h1 Approvals
      - if @loans_to_approve.size > 0
        = form_for(@loan, :action => url(:loan_actions, 'approve', :return => (request.path + "?for_date=#{@date}&staff_member_id=#{@staff_member.id}")), :class => "_disable_button_") do
          = partial "loans/approve"
          = submit 'Approve these loans', :name => "approve_loans"
          or
          %a{:href => "#{url(:loan_actions, 'reject', :return => resource(@staff_member))}", :class => "_rejection_button_"}
            Reject selected loans
      - else
        No approvals today
    %div.tab        
      %h1 Disbursal
      - if @loans_to_disburse.size > 0
        = form_for(@loan, :action => url(:loan_actions, :action => 'disburse', :return => (request.path + "?for_date=#{@date}&staff_member_id=#{@staff_member.id}#dishbursals")), :class => "_disable_button_") do
          = partial "loans/disburse", {:loans_to_disburse => @loans_to_disburse, :date => @date}
          = submit 'Disburse these loans', :name => "disburse_loans"
          or
          %a{:href => "#{url(:loan_actions, 'reject', :return => resource(@staff_member))}", :class => "_rejection_button_"}
            Reject selected loans
      - else
        No disbursals today
    %div.tab
      %h1 Fees
      = form_for(@payment, :action => url(:enter_payments, :action => 'by_staff_member', :return => request.path + "?for_date=#{@date}&staff_member_id=#{@staff_member.id}#fees"), :onsubmit => "javascript: return confirm_for({'received_by': #{@staff_member.id};", :class => "_disable_button_") do
        = hidden_field :name => :payment_type, :value => "fees"
        = hidden_field :name => 'staff_member_id', :value => @staff_member.id
        Fees collected by
        = select :name => "payment[received_by]", :collection => staff_members_collection, :selected => @staff_member.id.to_s, :id => 'fees_received_by'
        collected on
        = date_select :for_date, @date, :id => "fees_for_date"
        = submit 'Pay Fees'
        %table.report.nojs{:style => "width:100%"}
          %thead
            %tr{:style => "font-size: 0.85em"}
              %th
                id
              %th
                Client
              %th
                Loan
              %th
                Total Fees Payable
              %th
                Fees Already Paid
              %th
                Fees Due Today
              %th
                Fees      
          - @fee_paying_things.each do |obj, fee|
            - next if fee.size==0
            %tr{:class => cycle('odd','even')}
              %td
                = obj.id
              %td.text
                = obj.is_a?(Loan) ? link_to(obj.client.name, url_for_loan(obj)) : link_to(obj.name, resource(obj))
              %td.text
                = (link_to obj.description, url_for_loan(obj)) if obj.respond_to?("description")
              %td.text
                = obj.total_fees_due
              %td.text
                = obj.total_fees_paid
              %td.text
                - fee.each do |k,v|
                  ="#{k.name}: #{v}"
              %td
                - klass = Loan.descendants.include?(obj.class) ? Loan : obj.class
                = text_field :name => "paid[#{klass.to_s.snake_case}][#{obj.id}]", :value => fee.values.inject(0){|s,x| s+=x}, :cols => "5", :style => "width:50px;" 
          - frt = @loans.clients.payments(:type => :fees, :received_on => @date)
          - unless frt.blank?
            %tr
              %td{:colspan => "20", :style => "text-align: center"}
                %b Fees paid today
          - frt.each do |f|
            %tr
              %td.number
              %td.text
                = link_to f.client.name, resource(f.client)
              %td.text
                = (link_to f.loan.description, url_for_loan(f.loan)) if f.loan
              %td.text
              %td.number
                = f.amount
              %td
              %td.text
                = f.fee.description
          %tr.total
            %td
            %td
              = frt.count
              fee payments
            %td
            %td
            %td
              = frt.aggregate(:amount.sum)
            %td
      - unless @fee_paying_things.values.inject({}){|s,x| s+=x}.length==0

        No fees due today

          
          
    %div.tab
      %h1 Insurance Premia
    %div.tab
      %h1 Loan Utilization Check
      - if @loans_to_utilize.size > 0
        = form_for(@loan, :action => url(:enter_loans, 'make_loan_utilization', :return => resource(@staff_member)), :class => "_disable_button_") do
          = partial "data_entry/loans/make_loan_utilization"
          = submit "Loan Utilization", :name => "make LUC"
      - else
        No LUC pending
- else
  %h2 Choose a staff member to record a payment for
  = form_for(@payment, :action => url(:enter_payments, :action => 'by_staff_member'), :method => :get) do
    %table.form
      %tr
        %th
          Staff Member
        %td
          = select :name => 'staff_member_id', :collection => staff_members_collection, :class => "chosen"
      %tr
        %th
          For Date
        %td
          = date_select('for_date', Date.today)
    = submit 'Submit'

-# #darkenBackground
-#   #loading
-#     = image_tag '/images/spinner.gif'
-#     Please wait while we process your request
    
-# %h1
-#   = @date
-# - if @staff_member and @date
-#   - if not @errors.blank?
-#     .error
-#       %p
-#         - @errors.each do |error|
-#           Error with loan
-#           %b
-#             = error.resource.class == Payment ? error.resource.loan.id : error.resource.id
-#             == :
-#           - error.values.each do |v|
-#             = v
-#           %br
-#     = form_for(@payment, :action => url(:enter_payments, :action => 'by_staff_member')) do
-#       = submit 'Make Payments', :onclick => "javascript:$('#darkenBackground').show(); return true;"
-#       = hidden_field :name => 'for_date', :value => @date
-#       - @centers = @staff_member.centers.all(:meeting_day => Center.meeting_days[@date.wday])
-#       %h3
-#         = @centers.count
-#         Centers
-#       - @centers.each do |@center|
-#         %a{:name => 'weeksheet' }
-#           %h2
-#             = "Week #{@date.cweek} meeting sheet for center #{@center.name}"
-#         = hidden_field :name => 'center_id', :value => @center.id
-#         = partial :cds
-#       = submit 'Make Payments', :onclick => "javascript:$('#darkenBackground').show(); return true;"
 
-# 
- if @insurance_policy and @insurance_policy.id and not @insurance_policy.id.blank?
  = hidden_field :id
%table.tall.shaded
  %tr
    %th
      Insurance Product
    %td
      - if defined? :product_fixed? and @insurance_policy.insurance_product
        = @insurance_policy.insurance_product.name
        = hidden_field :insurance_product_id, :value => @insurance_policy.insurance_product.id
      - else
        = select :insurance_product_id, :collection => InsuranceProduct.all, :prompt => "---", :value_method => :id, :text_method => :name
        = link_to 'Add a product', resource(:insurance_products, :new, {:return => (@client ? resource(@client, :insurance_policies, :new) : nil)}), :class => "_remote_"
  - if @client
    %tr
      %th Attach to Loan
      %td
        = select :loan_id, :collection => @client.loans, :text_method => :description, :value_method => :id, :prompt => "---", :selected => @insurance_policy.loan_id.to_s
  %tr
    %th
      Policy Number
    %td
      = text_field :policy_no
  %tr
    %th
      Application number
    %td
      = text_field :application_number
  %tr
    %th
      Sum Insured
    %td
      = text_field :sum_insured
  %tr
    %th
      Premium
    %td
      = text_field :premium
  %tr
    %th
      Date from
    %td
      = date_select_for(@insurance_policy, "date_from", :date => @insurance_policy.date_from)
  %tr
    %th
      Date to
    %td
      = date_select_for(@insurance_policy, "date_to", :date => @insurance_policy.date_to, :max_date => Date.today + 3650)
      = hidden_field :client_id, :value => @client.id
  %tr
    %th
      Status
    %td
      = select(:status, :collection => InsurancePolicy::POLICY_STATUSES.map{|x| [x, x]})
  %tr
    %th
      Cover for
    %td
      = select(:cover_for, :collection => InsurancePolicy::COVER_FOR.map{|x| [x, x]})
  %tr
    %th
      Beneficiary Name
    %td
      = text_field :beneficiary_name

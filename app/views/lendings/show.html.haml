- facade = FacadeFactory.instance.get_instance(FacadeFactory::LOAN_ASSIGNMENT_FACADE, User.first)
%h1== Loan Name: <i>#{@lending_product.name}</i>
%table.loan{ :style => "width: 45%; border: solid 1px #cfcfcf; margin: 5px; " }
  %tr.even
    %th.even Borrower
    %td
      = link_to_with_rights @lending.loan_borrower.counterparty.name, url(:controller => :new_clients, :action => :show, :id => @lending.loan_borrower.counterparty.id)
  %tr.odd
    %th.odd Amount
    %td
      %b= @lending.to_money[:applied_amount].to_s
  %tr.even
    %th.even Frequency
    %td
      = @lending.repayment_frequency
  - if @lending.is_outstanding_now?
    %tr.odd
      %th.odd Disbursed On
      %td
        = @lending.disbursal_date
    %tr.even
      %th.even Scheduled first Repayment Date
      %td= @lending.scheduled_first_repayment_date
    %tr.odd
      %th.odd Loan Due Status
      %td= @lending.current_due_status.humanize
  %tr.odd
    %th.odd Loan Product
    %td
      = @lending_product.name
  %tr.even
    %th.even Loan Purpose
    %td
      = @lending.loan_purpose unless @lending.loan_purpose.blank?

  - unless @lending_product.loan_fee.blank?
    %tr.odd
      %th.odd
        Fee
      %td
        = @lending_product.loan_fee.timed_amounts.first.fee_money_amount.to_s unless @lending_product.loan_fee.timed_amounts.blank?
  %tr.even
    %th.even Loan Status
    %td= @lending.status.humanize

  %tr.even
    %th.even Loan outstanding Principal
    %td= "#{@lending.actual_principal_outstanding} as on #{@effective_date}"
  %tr.odd
    %th.odd Loan outstanding Interest
    %td= "#{@lending.actual_interest_outstanding} as on #{@effective_date}"
  %tr.even
    %th.even Loan assignment status
    %td
      - loan_assigned_to = facade.get_loan_assigned_to(@lending.id, Date.today)
      - if loan_assigned_to.nil?
        = "Not Assigned"
      - else
        = loan_assigned_to.loan_assignment_instance.to_s
  %tr.odd
    %th.odd Administered At
    %td= link_to_with_rights @lending.administered_at_origin_location.name, url(:controller => :user_locations, :action => :weeksheet_collection, :id => @lending.administered_at_origin)
  %tr.even
    %th.even Accounted At
    %td= link_to_with_rights @lending.accounted_at_origin_location.name, url(:controller => :user_locations, :action => :show, :id => @lending.accounted_at_origin)
  %tr.even
    %td
      =# link_to_with_rights "Preclose", url(:controller => :lendings, :action => :lending_preclose, :id => @lending.id), :class => "greenButton"

%div.tab_container.shaded
  %ul.tabs
    %li#Schedule
      Schedule
    %li#Transactions
      Transactions
    %li#Accruals
      Accruals
    %li#due_status
      Due Status
    %li#status_history
      Status History
  %div.tab
    %div#loan_schedules
      =partial "lendings/lending_schedule"
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_transactions, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_accrual_transaction, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_due_statuses, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_status_history, :id => @lending.id)}
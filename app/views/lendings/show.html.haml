%h1== Loan Name: <i>#{@lending_product.name}</i>
%div{:style => 'display:table; width:100%;'}
  %table.loan{ :style => "width:50%; border: solid 1px #cfcfcf; margin: 5px; " }
    %tr.even
      %th.even Loan Id
      %td
        = @lending.id
    %tr.odd
      %th.odd LAN Number
      %td
        = @lending.lan
    %tr.even
      %th.even Cycle Number
      %td
        = @lending.cycle_number
    %tr.odd
      %th.odd Borrower
      %td
        = link_to_with_rights @lending.loan_borrower.counterparty.name, url(:controller => :new_clients, :action => :show, :id => @lending.loan_borrower.counterparty.id)
    %tr.even
      %th.even Amount
      %td
        %b= @lending.to_money[:applied_amount].to_s
    %tr.odd
      %th.odd Frequency
      %td
        = @lending.repayment_frequency
    - if @lending.is_outstanding_now?
      %tr.even
        %th.even Disbursed On
        %td
          = @lending.disbursal_date
      %tr.odd
        %th.odd Loan Due Status
        %td= @lending.current_due_status.humanize
    - else
      %tr.even
        %th.even Schedule Disbursal Date
        %td= @lending.scheduled_disbursal_date
    - if @lending.loan_receipts.blank?
      %tr.odd
        %th.odd Scheduled first Repayment Date
        %td= @lending.scheduled_first_repayment_date
    - else
      %tr.even
        %th.even First Repayment Date
        %td= @lending.loan_receipts.first.effective_on rescue ''
    %tr.odd
      %th.odd Loan Product
      %td
        = link_to_with_rights @lending_product.name, resource(@lending_product)
    %tr.even
      %th.even Loan Purpose
      %td
        = @lending.loan_purpose unless @lending.loan_purpose.blank?
    %tr.odd
      %th.odd Loan outstanding Principal
      %td= "#{@lending.actual_principal_outstanding} as on #{@effective_date}"
    %tr.even
      %th.even Loan outstanding Interest
      %td= "#{@lending.actual_interest_outstanding} as on #{@effective_date}"
    %tr.odd
      %th.odd Loan assignment status
      %td
        = loan_assignment_facade.loan_assignment_status_message(@lending.id)
    %tr.even
      - locations = LoanAdministration.get_locations(@lending.id, get_effective_date)
      %th.even= LocationLevel.first(:level => 0).name
      %td= link_to_with_rights locations[:administered_at].name, url(:controller => :user_locations, :action => :weeksheet_collection, :id => locations[:administered_at].id)
    %tr.odd
      %th.odd= LocationLevel.first(:level => 1).name
      %td= link_to_with_rights locations[:accounted_at].name, url(:controller => :user_locations, :action => :show, :id => locations[:accounted_at].id)
    - unless @fee_instance.blank?
      %tr.even
        %th.even Fee Status
        %td= @fee_instance.map(&:status).join('<br>')
    - if @lending.is_outstanding_now?
      %tr
        %td
          = link_to_with_rights "Preclose", url(:controller => :lendings, :action => :lending_preclose, :id => @lending.id), :class => "greenButton"
  %div{:style => "display:table-cell;"}
    = partial 'lendings/status_histroy_summary'
%div.tab_container.shaded
  %ul.tabs
    %li#Schedule
      Schedule
    %li#Transactions
      Transactions
    %li#Fee_instance
      Fee Instance
    %li#Accruals
      Accruals
    %li#due_status
      Due Status
    %li#status_history
      Status History
    %li#history
      History
    %li#assignment_history
      Assignment History
    %li#re_schedule_history
      Re-Schedule History
  %div.tab
    %div#loan_schedules
      = partial "lendings/lending_schedule"
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_transactions, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :fee_instances, :action => :fee_instance_on_lending, :lending_id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_accrual_transaction, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_due_statuses, :id => @lending.id)}
  %div.tab
    %input{:type => "hidden", :name => "_load_remote", :value => url(:controller => :lendings, :action => :lending_status_history, :id => @lending.id)}
  %div.tab
    %table.report.nojs{:width => "100%"}
      %tr
        %th
          For
        %th
          Action
        %th
          Changes
        %th
          Date
        %th
          User
      - id = @lending.id
      - model = "Lending"
      - @obj = Kernel.const_get(model).get(id)
      - @trails = AuditTrail.all(:auditable_id => id, :auditable_type => model, :order => [:created_at.desc])
      - @trails.each do |trail|
        %tr
          %td
            = link_to_with_rights "#{trail.auditable_type} #{trail.auditable_id}", url(:controller => trail.auditable_type.pluralize.downcase, :action => "show", :id => trail.auditable_id)
          %td.text
            %span{:class => get_status_class([:delete, :create, :update].index(trail.action))}
              = trail.action
          %td.text
            %table{:width => '100%'}
              - change = []
              - trail.changes.each do |x|
                - next if (x.keys.include?(:applied_amount) or x.keys.include?(:approved_amount) or x.keys.include?(:disbursed_amount))
                - change << x
              = diff_display(change, @obj, trail.action)
          %td
            = trail.created_at.strftime("%d-%m-%Y %H:%M")
          %td
            = trail.user ? trail.user.login : "superuser"
  %div.tab
    %table.report.nojs{:width => "100%"}
      %tr
        %th
          For
        %th
          Action
        %th
          Changes
        %th
          Date
        %th
          User
      - model = "LoanAssignment"
      - loan_assignments = LoanAssignment.all(:loan_id => @lending.id).aggregate(:id)
      - loan_assignments.each do |la|
        - id = la
        - @obj = Kernel.const_get(model).get(id)
        - @trails = AuditTrail.all(:auditable_id => id, :auditable_type => model, :order => [:created_at.desc])
        - @trails.each do |trail|
          %tr
            %td
              = link_to_with_rights "#{trail.auditable_type} #{trail.auditable_id}", url(:controller => trail.auditable_type.pluralize.downcase, :action => "show", :id => trail.auditable_id)
            %td.text
              %span{:class => get_status_class([:delete, :create, :update].index(trail.action))}
                = trail.action
            %td.text
              %table{:width => '100%'}
                = diff_display(trail.changes, @obj, trail.action)
            %td
              = trail.created_at.strftime("%d-%m-%Y %H:%M")
            %td
              = trail.user ? trail.user.login : "superuser"
  %div.tab
    %table.report.nojs{:width => "100%"}
      %tr
        %th
          For
        %th
          Action
        %th
          Changes
        %th
          Date
        %th
          User
      - model = "BaseScheduleLineItem"
      - loan_schedules = BaseScheduleLineItem.all("loan_base_schedule.lending.id" => @lending.id).aggregate(:id)
      - loan_schedules.each do |ls|
        - id = ls 
        - @obj = Kernel.const_get(model).get(id)
        - @trails = AuditTrail.all(:auditable_id => id, :auditable_type => model, :order => [:created_at.desc])
        - @trails.each do |trail|
          %tr
            %td
              = link_to_with_rights "#{trail.auditable_type} #{trail.auditable_id}", url(:controller => trail.auditable_type.pluralize.downcase, :action => "show", :id => trail.auditable_id)
            %td.text
              %span{:class => get_status_class([:delete, :create, :update].index(trail.action))}
                = trail.action
            %td.text
              %table{:width => '100%'}
                = diff_display(trail.changes, @obj, trail.action)
            %td
              = trail.created_at.strftime("%d-%m-%Y %H:%M")
            %td
              = trail.user ? trail.user.login : "superuser"
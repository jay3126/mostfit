:javascript
  $('table.approve_loan').dataTable({
      "bPaginate": false,
      "bJQueryUI": true
    });

  $(document).ready(function() {
  $('#toggle_select_to_disburse').change(function() {
    $('.select_to_disburse').attr('checked',$(this).attr('checked'))});
  });

- if lendings.blank?
  %h3
    No loan exists
- else
  = form_for(:lendings, :action => url(:controller => :lendings, :action => :update_lending_approve_to_disburse)) do
    %table.report.weeksheet.nojs.approve_loan
      %thead
        %tr
          %th
            S.No.
          %th
            Check to Disburse
            %br
            = check_box :id => "toggle_select_to_disburse"
          %th
            Loan ID
          %th
            Applied Amount
          %th
            Borrower
          %th
            Applied Date
          %th
            First Repayment Date
          %th
            Scheduled Disbursal Date
          %th
            Repayment Frequency
          %th
            Tenure
          %th
            Administered At
          %th
            Accounted At
          %th
            Approve Amount
          %th
            Approve by
          %th
            Approve Date
          %th
            Disburse Amount
      - loan_row_count = 1
      - lendings.each do |lending|
        %tr
          %td
            = loan_row_count
          %td
            - client = Client.get(lending.loan_borrower.counterparty_id)
            - if (lending.applied_by_staff == session.user.staff_member.id) || client_facade.is_claim_processing_or_inactive?(client)
              = check_box :name => "lending[#{lending.id}][]" ,:value => lending.id, :disabled => true
            - else
              = check_box :name => "lending[#{lending.id}][]" ,:value => lending.id, :class => 'select_to_disburse'
            %br
            - if client_facade.is_claim_processing_or_inactive?(client)
              %i Client Inactive
            - elsif lending.applied_by_staff == session.user.staff_member.id
              %i No privilege
          %td
            = link_to_with_rights lending.id, resource(lending)
          %td
            = lending.to_money[:applied_amount].to_s
          %td
            = lending.loan_borrower.counterparty.name
          %td
            = lending.applied_on_date
          %td
            = lending.scheduled_first_repayment_date
          %td
            = lending.scheduled_disbursal_date
          %td
            = lending.repayment_frequency
          %td
            = lending.tenure
          %td
            = link_to_with_rights lending.administered_at_origin_location.name, url(:controller => :user_locations, :action => :weeksheet_collection, :id => lending.administered_at_origin)
          %td
            = link_to_with_rights lending.accounted_at_origin_location.name, url(:controller => :user_locations, :action => :show, :id => lending.accounted_at_origin)
          %td
            = lending.to_money[:approved_amount].to_s
          %td
            = link_to_with_rights StaffMember.get(lending.approved_by_staff).name, url(:controller => :staff_members, :action => :show, :id => lending.approved_by_staff)
          %td
            = lending.approved_on_date
          %td
            = text_field :name => "lending[#{lending.id}][][disbursed_amount]", :value => lending.to_money[:approved_amount].to_s.delete("a-z A-Z"), :style => "width:70px;"
          - loan_row_count = loan_row_count + 1
      %tfoot
        %tr.org_total
          %td{:colspan => 18}
            %i No privilege: The Staff member who created the loan cannot Disburse it.
            %br
            %i Client Inactive: The Client is going throuh death claim processing.

    %table
      %tfoot
        %tr.org_total
          %td
            %b Select Disbursal Date
          %td
            = date_select "disbursal_date", get_effective_date, :max_date => Date.today
          %td
            %b Staff Members
          %td
            = select :name => "disbursed_by_staff", :collection => [session.user.staff_member], :text_method => :name, :value_method => :id
    = hidden_field :name => 'parent_location_id', :value => params[:parent_location_id]
    = hidden_field :name => 'childe_location_id', :value => params[:child_location_id]
    = submit "Disburse"
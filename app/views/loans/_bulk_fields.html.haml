:javascript
  o = {"applied_by":#{@center.manager.id}, "approved_by":#{@center.branch.manager.id}, "disbursed_by":#{@center.manager.id}}
- weekdays = [:monday, :tuesday, :wednesday, :thursday, :friday, :saturday, :sunday]
= hidden_field :name => "loan_type", :value => @loan.class.to_s
= hidden_field :name => "loan_product_id", :value => @loan_product.id
= hidden_field :name => "branch_id", :value => @branch.id
= hidden_field :name => "center_id", :value => @center.id
%h3
  = "This loan will be dispensed by loan product: #{@loan_product.name}"

%table.tall.shaded{:style => "margin-left:3%"}
  %thead
    %tr.shaded
      %th
      - @loans.each do |loan|
        %th{:class => cycle('purple','lightpurple'), :style => "text-align: center; border-right: 1px solid #cfcfcf;"}
          New Loan for
          %br
          = loan.client.name
  - unless @loans.map{|l| l.errors.values}.flatten.blank?
    %tr
      %th
        - @loans.each do |loan|
          %td.error.right-border
            %ul.small
              - loan.errors.each do |e|
                %li
                  = e
  %tr
    %th
      Applied Amount:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        - if @loan_product.min_amount!=@loan_product.max_amount
          = text_field :name => "loans[#{i}][amount_applied_for]", :size => 15, :value => loan.amount_applied_for
        - else
          = @loan_product.min_amount
          = hidden_field :name => "loans[#{i}][amount_applied_for]", :value => @loan_product.min_amount
        = hidden_field :name => "loans[#{i}][client_id]", :value => loan.client_id
  %tr
    %th
      Interest rate:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        - if @loan_product.min_interest_rate != @loan_product.max_interest_rate 
          = text_field :name => "loans[#{i}][interest_rate]", :size => 15, :value => (loan.interest_rate ? loan.interest_rate * 100 : '')
        - else
          = @loan_product.min_interest_rate
          = hidden_field :name => "loans[#{i}][interest_rate]", :value => @loan_product.min_interest_rate
        %br/
  %tr
    %th
      Installment frequency:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        - if INSTALLMENT_FREQUENCIES.include?(@loan_product.installment_frequency)
          = hidden_field :name => "loans[#{i}][installment_frequency]", :value => @loan_product.installment_frequency.to_s
          = @loan_product.installment_frequency.to_s
        - else
          = select :installment_frequency, :collection =>  Loan.installment_frequencies.map { |x| [x.to_s, x.to_s] }
  - if @loan_product.installment_frequency == :daily
    %tr
      %th
        Weekly Off
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = select :weekly_off, :collection => [["","--"]] + weekdays.map{|w| [(weekdays.index(w) + 1).to_s, w]}
  %tr
    %th
      Number of installments:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        - if @loan_product.min_number_of_installments==@loan_product.max_number_of_installments
          = @loan_product.min_number_of_installments
          = hidden_field :name => "loans[#{i}][number_of_installments]", :value => @loan_product.min_number_of_installments
        - else
          = text_field :name => "loans[#{i}][number_of_installments]", :size => 4, :value => loan.number_of_installments
  %tr
    %th
      Loan Purpose:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        = select :collection => Occupation.all.map{|x| [x.id, x.name]}, :prompt => "----", :name => "loans[#{i}][occupation_id]", :selected => loan.occupation_id.to_s
  %tr
    %th
      Funding Line
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = select_funding_line_for loan, :funding_line, :name => "loans[#{i}][funding_line_id]"
  %tr
    %th
      Application:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        = date_select_for loan, :applied_on, {:name => "loans[#{i}][applied_on]", :id => "loans_#{i}_applied_on"}
        = select_staff_member_for loan, :applied_by, :selected => @center.manager.id.to_s, :id => "loans_#{i}_applied_by", :name => "loans[#{i}][applied_by]"
  %tr
    %th
      Scheduled disbursal date:
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        - probable_scheduled_disbursal_date = @center.next_meeting_date_from(Date.today)
        = date_select_for loan, :scheduled_disbursal_date, {:name => "loans[#{i}][scheduled_disbursal_date]", :id => "loans_#{i}_scheduled_disbursal_date",:max_date => Date.max_date, :date => (loan.scheduled_disbursal_date || probable_scheduled_disbursal_date)}
  - if @loan_product.installment_frequency == :weekly
    %tr
      %th
        Scheduled first payment:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = date_select_for loan, :scheduled_first_payment_date, {:name => "loans[#{i}][scheduled_first_payment_date]", :id => "loans_#{i}_scheduled_first_payment_date", :max_date => Date.max_date, :date => (loan.scheduled_first_payment_date || @center.next_meeting_date_from(probable_scheduled_disbursal_date))}
  - else
    %tr
      %th
        Scheduled first payment:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = date_select_for loan, :scheduled_first_payment_date, {:name => "loans[#{i}][scheduled_first_payment_date]", :id => "loans_#{i}_scheduled_first_payment_date", :max_date => Date.max_date}
  - if @loan_product.linked_to_insurance
    %tr              
      %th
        %b Insurance policy details
      %td{:class => cycle("odd right-border","even right-border"), :colspan => 4}
        - @insurance_policy.insurance_product = @loan_product.insurance_product
        = error_messages_for @insurance_policy
        = form_for(@insurance_policy, :action => resource(@client, :insurance_policies) ) do
          = partial "insurance_policies/fields"
  - if not @loans.first.new? and [:admin, :mis_manager].include?(session.user.role)
    %tr
      %th
        Approved Amount:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          - if @loan_product.min_amount!=@loan_product.max_amount
            = text_field :name => "loans[#{i}][amount_sanctioned]", :size => 15
          - else
            = @loan_product.min_amount
            %span.greytext Rupees
            = hidden_field :name => "loans[#{i}][amount_applied_for]", :value => @loan_product.min_amount
    %tr
      %th
        Approval date:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = date_select_for @loan, :approved_on, :nullable => true
          = select_staff_member_for @loan, :approved_by, :id => "approved_by"
          %br/
          %span.greytext these fields are optional so may be specified later
    %tr
      %th
        Disbursed Amount:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          - if @loan_product.min_amount!=@loan_product.max_amount
            = text_field :name => "loans[#{i}][amount]", :size => 15
          - else
            = @loan_product.min_amount
            = hidden_field :name => "loans[#{i}][amount_applied_for]", :value => @loan_product.min_amount
    %tr
      %th
        Disbursal date:
      - @loans.each_with_index do |loan,i|
        %td{:class => cycle("odd right-border","even right-border")}
          = date_select_for @loan, :disbursal_date, :nullable => true
          = select_staff_member_for @loan, :disbursed_by, :id => "disbursed_by"
          %br/
          %span.greytext these fields are optional so may be specified later
  %tr
    %th
      %b Applicable Fees
    - @loans.each_with_index do |loan,i|
      %td{:class => cycle("odd right-border","even right-border")}
        %ul{:style => "font-size: 0.7em;"}
          -  @loan_product.fees.each do |f|
            %li
              = f.description
  %tr
    %td
    %td
      = submit submit_text, :class => "grey_button"
      &nbsp;&nbsp;
      = link_to 'cancel', cancel_link

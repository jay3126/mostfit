- center_cycle_number = CenterCycle.get_current_center_cycle(@center.id)
= error_messages_for @loan_application
%table
  %h1 
    = "Edit loan application: #{@loan_application.id}"
  = form_for(@loan_application, :action => url(:loan_application, @loan_application) ) do
    %tr
      %th Applicant Name
      %td
        = text_field :client_name
    %tr
      %th Guarantor Name
      %td
        = text_field :client_guarantor_name
    %tr
      %th Relationship
      %td
        = select :client_guarantor_relationship, :collection => Constants::Masters::RELATIONSHIPS.each{|x| [x.to_s, x]}, :prompt => 'Select'
    %tr
      %th Applicant Birth Date
      %td
        = date_select_for @loan_application, :client_dob, :min_date => Date.today-36500, :max_date => Date.today-1000, :size => 10, :holiday => false
    %tr
      %th Ration Card No.
      %td
        = text_field :client_reference1
        %span.greytext
          (allowed only: a-z, A-Z, 0-9)
        = hidden_field :client_reference1_type, :value => Constants::Masters::RATION_CARD
    %tr
      %th Reference 2 Type
      %td
        = select :client_reference2_type, :collection => Constants::Masters::REFERENCE2_TYPES_ALLOWED.map{|x| [x.to_s, x.to_s.humanize]}
    %tr
      %th Reference 2 No.
      %td
        = text_field :client_reference2
        %span.greytext
          (allowed only: a-z, A-Z, 0-9)
    %tr
      %th Applied for amount
      %td
        - loan_product_amount = (choice_facade.available_loan_products.collect {|lp| lp.loan_money_amount.to_regular_amount}).uniq
        = select :amount, :collection => loan_product_amount.map{|x| [x.to_s]}, :selected => @loan_application.loan_money_amount.to_regular_amount
    %tr
      %th Address
      %td
        = text_field :client_address
    %tr
      %th Location
      %td
        - all_states = BizLocation.get_state_locations
        - branch_id = @branch.nil? ? params[:parent_location_id] : @branch.id
        - biz_location =  BizLocation.get(branch_id)
        - state_name = @loan_application.client_state
        = select :client_state, :collection => all_states.map{|x| [x.name.downcase, x.name.humanize]}, :prompt => 'Select', :selected => state_name.downcase
    %tr
      %th Pincode
      %td
        = text_field :client_pincode, :size => AddressValidation::PIN_CODE_MAX_TEXT_LENGTH, :maxlength => AddressValidation::PIN_CODE_MAX_TEXT_LENGTH
        = hidden_field :name => 'center_cycle_number', :value => center_cycle_number
    %table.narrow.form{:style => "width:100%;"}
      %tfoot
        %tr
          %td
            = submit 'Update', :class => "grey_button"
          %td
            = link_to_with_rights 'Cancel',"/loan_applications/#{@loan_application.id}", :class => "grey_button"

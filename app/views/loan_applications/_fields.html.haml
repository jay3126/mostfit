- center_cycle_number = CenterCycle.get_current_center_cycle(@center.id)
- if @center.nil?
  %h3 Select branch and center to create new loan applications for new loan applicants
- elsif (center_cycle_number == 0) 
  %h3 No Center cycle exists for this center. Please create one from the center show page
- else
  - loan_application = @loan_application.blank? ? LoanApplication.new : @loan_application
  %h2
    = "Center Cycle Number: #{center_cycle_number}"
  = form_for(loan_application, :action => url(:controller => :loan_applications, :action => :bulk_create_loan_applicant), :method => :post) do
    %table.dataTable
      %thead
        %tr
          %th Applicant Name
          %th Guarantor Name
          %th Relationship
          %th Applicant Birth Date
          %th Age
          %th Ration Card No.
          %th Reference 2 Type
          %th Reference 2 No.
          %th Applied for amount
          %th Address
          %th Location
          %th Pincode
      %tbody
        %tr
          %td
            = text_field :client_name
          %td
            = text_field :client_guarantor_name
          %td
            = select :client_guarantor_relationship, :collection => Constants::Masters::RELATIONSHIPS.each{|x| [x.to_s, x]}, :prompt => 'Select'
          %td
            = date_select :client_dob, params[:client_dob], :min_date => Date.today-36500, :max_date => Date.today-1000, :size => 10, :holiday => false
          %td
            = text_field :name => "client_age", :id => "client_age", :readonly => 'true', :size => 4
          %td
            = text_field :client_reference1
            = hidden_field :client_reference1_type, :value => Constants::Masters::RATION_CARD
          %td
            = select :client_reference2_type, :collection => Constants::Masters::REFERENCE2_TYPES_ALLOWED.map{|x| [x.to_s, x.to_s.humanize]}, :selected => params[:loan_application] ? params[:loan_application][:client_reference2_type] : Constants::Masters::VOTER_ID.to_s
          %td
            = text_field :client_reference2
          %td
            - selected_amount = params[:loan_application] ? params[:loan_application][:amount] : nil
            - loan_product_amount = @branch.branch_loan_product_amount_list
            = select :amount, :collection => loan_product_amount.map{|x| [x.to_s]}, :selected => selected_amount, :prompt => 'Select'
          %td
            = text_field :client_address
          %td
            - all_states = BizLocation.get_state_locations
            - branch_id = @branch.nil? ? params[:parent_location_id] : @branch.id
            - biz_location =  BizLocation.get(branch_id)
            - if loan_application.new?
              - state_location = biz_location.get_parent_location_at_location_level('state')
              - state_name = state_location.blank? ? '' : state_location.name
            - else
              - state_name = loan_application.client_state
            = select :client_state, :collection => all_states.map{|x| [x.name.downcase, x.name.humanize]}, :prompt => 'Select', :selected => state_name.downcase
          %td
            = text_field :client_pincode, :size => AddressValidation::PIN_CODE_MAX_TEXT_LENGTH, :maxlength => AddressValidation::PIN_CODE_MAX_TEXT_LENGTH
            = hidden_field :name => 'parent_location_id', :value => @branch.nil? ? params[:parent_location_id] : @branch.id
            = hidden_field :name => 'child_location_id', :value => @center.nil? ? params[:child_location_id] : @center.id
            = hidden_field :name => 'center_cycle_number', :value => center_cycle_number
            = hidden_field :at_branch_id, :value => @branch.nil? ? (params[:loan_application] and params[:loan_application][:at_branch_id]) : @branch.id
            = hidden_field :at_center_id, :value => @center.nil? ? (params[:loan_application] and params[:loan_application][:at_center_id]) : @center.id
    %table.narrow.form{:style => "width:100%;"}
      %tfoot
        %tr
          %td
            %b Created By:
            = get_session_user_name
            = hidden_field :name => 'loan_application[created_by_staff_id]', :value => get_session_user_id
          %td
            %b Created On:
            = date_select :created_on, (params[:created_on] || Date.today), :max_date => Date.today
          %td
            = submit 'Create and Continue'
          %td
            %input{:value => "Reset", :type => 'reset', :class => 'greenButton'}

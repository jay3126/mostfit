:javascript
  $('table.dataTable').dataTable({
      "bPaginate": false,
      "bJQueryUI": true
    });

- if @weeksheet.blank?
  Today don't have any repayments
- else
  %h1
    WEEKSHEET
  = link_to_with_rights "Repayment by Weeksheet", resource(:payment_transactions, :weeksheet_payments ,:biz_location_id => @biz_location.id ,:date => @date)
  - total_amount, total_schedule_principal_due, total_principal_due, total_schedule_principal_outstanding, total_schedule_interest_due = 0,0,0,0,0
  - total_schedule_interest_outstanding, total_advance_amount_balance, total_receipt_principal, total_receipt_interest, total_receipt_advance = 0,0,0,0,0
  - total_due_principal, total_due_interest, total = 0,0,0
  %table.dataTable.report.weeksheet.nojs
    %thead
      %tr
        %th
          Client Name
        %th
          Loan Id
        %th
          Loan Status
        %th
          Amount
        %th
          Disbursed On Date
        %th
          Due Status
        %th
          Installment No.
        %th
          Installment Date
        %th
          Schedule Principal Due
        %th
          Principal Due
        %th
          Schedule Principal Outstanding
        %th
          Schedule Interest Due
        %th
          Schedule Interest Outstanding
        %th
          Advance Amount Balance
        %th
          Receipts Principal
        %th
          Receipts Interest
        %th
          Receipts Advance
        %th
          Due Principal
        %th
          Due Interest
        %th
          Total Due
    - @weeksheet.groups.each do |group|
      - loan_row_count = 0
      - biz_location = BizLocation.get @weeksheet.at_biz_location_id
      - collection_sheets = @weeksheet.collection_sheet_lines.select{|cs| cs.borrower_group_id == group[0]}.sort_by{|cs| cs.borrower_name} rescue []
      - grp_amount, grp_outstanding, grp_installments, grp_principal_paid, grp_principal_due, grp_interest_due, grp_interest_paid, grp_fee_due, grp_fee_paid, grp_total_due, grp_total_paid = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
      - collection_sheets.each do |ws|
        %tr
          %td
            = ws.borrower_name
          %td
            = ws.loan_id
          %td
            = ws.loan_status.to_s.humanize
          %td
            = ws.loan_disbursed_amount.to_s unless ws.loan_disbursed_amount.blank?
            - total_amount = total_amount + ws.loan_disbursed_amount.amount.to_i unless ws.loan_disbursed_amount.blank?
          %td
            = ws.loan_disbursed_date
          %td
            = ws.loan_due_status
          %td
            = ws.loan_installment_number
          %td
            = ws.loan_schedule_date
          %td
            = ws.loan_schedule_principal_due.to_s
            - total_schedule_principal_due = total_schedule_principal_due + ws.loan_schedule_principal_due.amount.to_i unless ws.loan_schedule_principal_due.blank?
          %td
            = ws.loan_principal_due.to_s
            - total_principal_due = total_principal_due + ws.loan_principal_due.amount.to_i unless ws.loan_principal_due.blank?
          %td
            = ws.loan_schedule_principal_outstanding.to_s
            - total_schedule_principal_outstanding = total_schedule_principal_outstanding + ws.loan_schedule_principal_outstanding.amount.to_i unless ws.loan_schedule_principal_outstanding.blank?
          %td
            = ws.loan_schedule_interest_due.to_s
            - total_schedule_interest_due = total_schedule_interest_due + ws.loan_schedule_interest_due.amount.to_i unless ws.loan_schedule_interest_due.blank?
          %td
            = ws.loan_schedule_interest_outstanding.to_s
            - total_schedule_interest_outstanding = total_schedule_interest_outstanding + ws.loan_schedule_interest_outstanding.amount.to_i unless ws.loan_schedule_interest_outstanding.blank?
          %td
            = ws.loan_advance_amount.to_s
            - total_advance_amount_balance = total_advance_amount_balance + ws.loan_advance_amount.amount.to_i unless ws.loan_advance_amount.blank?
          %td
            = ws.loan_principal_receipts.to_s
            - total_receipt_principal = total_receipt_principal + ws.loan_principal_receipts.amount.to_i unless ws.loan_principal_receipts.blank?
          %td
            = ws.loan_interest_receipts.to_s
            - total_receipt_interest = total_receipt_interest + ws.loan_interest_receipts.amount.to_i unless ws.loan_interest_receipts.blank?
          %td
            = ws.loan_advance_receipts.to_s
            - total_receipt_advance = total_receipt_advance + ws.loan_advance_receipts.amount.to_i unless ws.loan_advance_receipts.blank?
          %td
            = ws.loan_total_principal_due.to_s
            - total_due_principal = total_due_principal + ws.loan_total_principal_due.amount.to_i unless ws.loan_total_principal_due.blank?
          %td
            = ws.loan_total_interest_due.to_s
            - total_due_interest = total_due_interest + ws.loan_total_interest_due.amount.to_i unless ws.loan_total_interest_due.blank?
          %td
            = ws.total_paid.to_s
            - total = total + ws.total_paid.amount.to_i unless ws.total_paid.blank?
    %tfoot
      %tr.org_total
        %td
          %b==Total
        %td
        %td
        %td
          = Money.new(total_amount,:INR).to_s
        %td
        %td
        %td
        %td
        %td
        %td
          = Money.new(total_schedule_principal_due,:INR).to_s
        %td
          = Money.new(total_principal_due,:INR).to_s
        %td
          = Money.new(total_schedule_principal_outstanding,:INR).to_s
        %td
          = Money.new(total_schedule_interest_due,:INR).to_s
        %td
          = Money.new(total_schedule_interest_outstanding,:INR).to_s
        %td
          = Money.new(total_advance_amount_balance,:INR).to_s
        %td
          = Money.new(total_receipt_principal,:INR).to_s
        %td
          = Money.new(total_receipt_interest,:INR).to_s
        %td
          = Money.new(total_receipt_advance,:INR).to_s
        %td
          = Money.new(total_due_principal,:INR).to_s
        %td
          = Money.new(total_due_interest,:INR).to_s
        %td
          = Money.new(total,:INR).to_s








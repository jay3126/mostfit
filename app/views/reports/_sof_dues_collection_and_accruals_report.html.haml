= partial :form
- if @data.blank? || @data[:loans].blank?
  %h2 No data to display
- else
  %table.dataTable.report.weeksheet.nojs
    %thead
      %tr
        %th
          Branch Name
        %th{:colspan => 3}
          Dues
        %th{:colspan => 7}
          Collections
        %th{:colspan => 3}
          Disbursal, Accrual, POS

      %tr
        %th
        %th{:colspan => 3}
          EWI Due
        %th{:colspan => 3}
          EWI Collected
        %th
          Processing
        %th
          Foreclosure
        %th
          Foreclosure
        %th
          Total
        %th
          Disbursed
        %th
          Interest
        %th
          Outstanding
      %tr
        %th
        %th
          Principal
        %th
          Interest
        %th
          Total
        %th
          Principal
        %th
          Interest
        %th
          Total
        %th
          Fees
        %th
          Fees
        %th
          POS
        %th
          Collected
        %th
          Amount
        %th
          Accrued
        %th
          Principal

    %tbody
      - accumulate_row_values = Hash.new(MoneyManager.default_zero_money)
      - @default_currency ||= MoneyManager.get_default_currency
      - @data[:loans].sort_by{|branch| branch}.each do |branch, values|
        %tr
          %td
            %b
              = values[:branch_name]
          %td
            = values[:dues_emi_principal]
            - accumulate_row_values[:dues_emi_principal] += values[:dues_emi_principal]
          %td
            = values[:dues_emi_interest]
            - accumulate_row_values[:dues_emi_interest] += values[:dues_emi_interest]
          %td
            = values[:dues_emi_total]
            - accumulate_row_values[:dues_emi_total] += values[:dues_emi_total]
          %td
            = values[:emi_collect_principal]
            - accumulate_row_values[:emi_collect_principal] += values[:emi_collect_principal]
          %td
            = values[:emi_collect_interest]
            - accumulate_row_values[:emi_collect_interest] += values[:emi_collect_interest]
          %td
            = values[:emi_collect_total]
            - accumulate_row_values[:emi_collect_total] += values[:emi_collect_total]
          %td
            = values[:loan_fee_collect]
            - accumulate_row_values[:loan_fee_collect] += values[:loan_fee_collect]
          %td
            = values[:preclosure_collect_fee]
            - accumulate_row_values[:preclosure_collect_fee] += values[:preclosure_collect_fee]
          %td
            = values[:preclosure_collect]
            - accumulate_row_values[:preclosure_collect] += values[:preclosure_collect]
          %td
            = values[:total_fee_collect]
            - accumulate_row_values[:total_fee_collect] += values[:total_fee_collect]
          %td
            = values[:disbursed_amount]
            - accumulate_row_values[:disbursed_amount] += values[:disbursed_amount]
          %td
            = values[:interest_accrued]
            - accumulate_row_values[:interest_accrued] += values[:interest_accrued]
          %td
            = values[:outstanding_principal]
            - accumulate_row_values[:outstanding_principal] += values[:outstanding_principal]
    - total_rows = Money.add_money_hash_values(@default_currency, accumulate_row_values)
    %tfoot
      %tr
        %th
          Total
          %td
            = total_rows[:dues_emi_principal]
          %td
            = total_rows[:dues_emi_interest]
          %td
            = total_rows[:dues_emi_total]
          %td
            = total_rows[:emi_collect_principal]
          %td
            = total_rows[:emi_collect_interest]
          %td
            = total_rows[:emi_collect_total]
          %td
            = total_rows[:loan_fee_collect]
          %td
            = total_rows[:preclosure_collect_fee]
          %td
            = total_rows[:preclosure_collect]
          %td
            = total_rows[:total_fee_collect]
          %td
            = total_rows[:disbursed_amount]
          %td
            = total_rows[:interest_accrued]
          %td
            = total_rows[:outstanding_principal]
  %br
  .flickr_pagination
    = will_paginate @data[:branch_ids], :container => false
  %br
= partial :form
- if @data.blank? || @data[:record].blank?
  %h2 No data to display
- else
  %table.dataTable.report.weeksheet.nojs
    %thead
      %tr
        %th{:style => 'display:none'}
        %th{:colspan => 2}
          Branch
        %th{:colspan => 3}
          DUES
        %th{:colspan => 10}
          COLLECTIONS
        %th{:colspan => 3}
          DISBURSAL, ACCRUAL, POS
      %tr
        %th{:style => 'display:none'}
        %th
          Branch
        %th
          Txn
        %th{:colspan => 3}
          EMI Due
        %th{:colspan => 3}
          EMI Collected
        %th
          Advance
        %th
          Recovery
        %th
          Processing
        %th{:colspan => 3}
          Foreclosure
        %th
          Total
        %th
          Interest
        %th
          Disbursed
        %th
          Principal
      %tr
        %th{:style => 'display:none'}
        %th
          Name
        %th
          Date
        %th
          Principal
        %th
          Interest
        %th
          Total
        %th
          Principal
        %th
          Interest
        %th
          Total
        %th
          Amt
        %th
          Amt
        %th
          Fees
        %th
          Principal
        %th
          Interest
        %th
          Fee
        %th
          Amount
        %th
          Accrued
        %th
          Amount
        %th
          Principal
    %tbody
      - @default_currency ||= MoneyManager.get_default_currency
      - accumulate_row_values = Hash.new(MoneyManager.default_zero_money)
      - @data[:record].each do |branch, branch_values|
        - branch_accumulate_row_values = Hash.new(MoneyManager.default_zero_money)
        - branch_values.sort.each do |key, values|
          %tr
            %td{:style => 'display:none'}
            %td
              %b
                = values[:branch_name]
            %td
              = values[:on_date]
            %td
              = values[:dues_emi_principal]
              - accumulate_row_values[:dues_emi_principal] += values[:dues_emi_principal]
              - branch_accumulate_row_values[:dues_emi_principal] += values[:dues_emi_principal]
            %td
              = values[:dues_emi_interest]
              - accumulate_row_values[:dues_emi_interest] += values[:dues_emi_interest]
              - branch_accumulate_row_values[:dues_emi_interest]  += values[:dues_emi_interest]
            %td
              = values[:dues_emi_total]
              - accumulate_row_values[:dues_emi_total] += values[:dues_emi_total]
              - branch_accumulate_row_values[:dues_emi_total] += values[:dues_emi_total]
            %td
              = values[:emi_collect_principal]
              - accumulate_row_values[:emi_collect_principal] += values[:emi_collect_principal]
              - branch_accumulate_row_values[:emi_collect_principal] += values[:emi_collect_principal]
            %td
              = values[:emi_collect_interest]
              - accumulate_row_values[:emi_collect_interest] += values[:emi_collect_interest]
              - branch_accumulate_row_values[:emi_collect_interest] += values[:emi_collect_interest]
            %td
              = values[:emi_collect_total]
              - accumulate_row_values[:emi_collect_total] += values[:emi_collect_total]
              - branch_accumulate_row_values[:emi_collect_total]+= values[:emi_collect_total]
            %td
              = values[:advance_received]
              - accumulate_row_values[:advance_received] += values[:advance_received]
              - branch_accumulate_row_values[:advance_received]+= values[:advance_received]
            %td
              = values[:loan_recovery]
              - accumulate_row_values[:loan_recovery] += values[:loan_recovery]
              - branch_accumulate_row_values[:loan_recovery]+= values[:loan_recovery]
            %td
              = values[:loan_fee_collect]
              - accumulate_row_values[:loan_fee_collect] += values[:loan_fee_collect]
              - branch_accumulate_row_values[:loan_fee_collect] += values[:loan_fee_collect]
            %td
              = values[:preclosure_principal]
              - accumulate_row_values[:preclosure_principal] += values[:preclosure_principal]
              - branch_accumulate_row_values[:preclosure_principal] += values[:preclosure_principal]
            %td
              = values[:preclosure_interest]
              - accumulate_row_values[:preclosure_interest] += values[:preclosure_interest]
              - branch_accumulate_row_values[:preclosure_interest] += values[:preclosure_interest]
            %td
              = values[:preclosure_collect_fee]
              - accumulate_row_values[:preclosure_collect_fee] += values[:preclosure_collect_fee]
              - branch_accumulate_row_values[:preclosure_collect_fee]  += values[:preclosure_collect_fee]
            %td
              - t_collection = values[:total_fee_collect] + values[:advance_received] + values[:loan_recovery]
              = t_collection
              - accumulate_row_values[:total_fee_collect] += t_collection
              - branch_accumulate_row_values[:total_fee_collect] += t_collection
            %td
              = values[:interest_accrued]
              - accumulate_row_values[:interest_accrued] += values[:interest_accrued]
              - branch_accumulate_row_values[:interest_accrued] += values[:interest_accrued]
            %td
              = values[:disbursed_amount]
              - accumulate_row_values[:disbursed_amount] += values[:disbursed_amount]
              - branch_accumulate_row_values[:disbursed_amount] += values[:disbursed_amount]
            %td
              = values[:outstanding_principal]
              - branch_accumulate_row_values[:outstanding_principal] = values[:outstanding_principal]
        - branch_total_rows = Money.add_money_hash_values(@default_currency, branch_accumulate_row_values)
        %tr{:class => 'header_row', :style => "text-align:center; background:#708890;"}
          %th{:style => 'display:none'}
          %th
            Total
          %td
          %td
            = branch_total_rows[:dues_emi_principal]
          %td
            = branch_total_rows[:dues_emi_interest]
          %td
            = branch_total_rows[:dues_emi_total]
          %td
            = branch_total_rows[:emi_collect_principal]
          %td
            = branch_total_rows[:emi_collect_interest]
          %td
            = branch_total_rows[:emi_collect_total]
          %td
            = branch_total_rows[:advance_received]
          %td
            = branch_total_rows[:loan_recovery]
          %td
            = branch_total_rows[:loan_fee_collect]
          %td
            = branch_total_rows[:preclosure_principal]
          %td
            = branch_total_rows[:preclosure_interest]
          %td
            = branch_total_rows[:preclosure_collect_fee]
          %td
            = branch_total_rows[:total_fee_collect]
          %td
            = branch_total_rows[:interest_accrued]
          %td
            = branch_total_rows[:disbursed_amount]
          %td
            = branch_total_rows[:outstanding_principal]
            - accumulate_row_values[:outstanding_principal] += branch_total_rows[:outstanding_principal]
      - total_rows = Money.add_money_hash_values(@default_currency, accumulate_row_values)
      %tfoot
        %tr
          %th{:style => 'display:none'}
          %th
            Total
          %td
          %td
            = total_rows[:dues_emi_principal]
          %td
            = total_rows[:dues_emi_interest]
          %td
            = total_rows[:dues_emi_total]
          %td
            = total_rows[:emi_collect_principal]
          %td
            = total_rows[:emi_collect_interest]
          %td
            = total_rows[:emi_collect_total]
          %td
            = total_rows[:advance_received]
          %td
            = total_rows[:loan_recovery]
          %td
            = total_rows[:loan_fee_collect]
          %td
            = total_rows[:preclosure_principal]
          %td
            = total_rows[:preclosure_interest]
          %td
            = total_rows[:preclosure_collect_fee]
          %td
            = total_rows[:total_fee_collect]
          %td
            = total_rows[:interest_accrued]
          %td
            = total_rows[:disbursed_amount]
          %td
            = total_rows[:outstanding_principal]
  %br
  .flickr_pagination
    = will_paginate @data[:branches], :container => false
  %br
:javascript
  $(document).ready(function() {
    total_row = jQuery('table.weeksheet').find('tbody tr').size();
    total_header_row = jQuery('table.weeksheet').find('tbody tr.header_row').size();
    total_row_count = total_row - total_header_row
    jQuery('.dataTables_info').html('Total Record '+total_row_count);
  });
= partial :form
- if @data.blank? || @data[:branches].blank?
  %h2 No data to display
- else
  %table.dataTable.report.weeksheet.nojs
    %thead
      %tr
        %th{:colspan => 7}
          Demand
        %th{:colspan => 9}
          Collection
        %th
          Fee
      %tr
        %th
          Branch
        %th
          EWI Scheduled
        %th
          EWI Advance
        %th
          Over Due FTD*
        %th
          Over Due Amt*
        %th
          EMI Due
        %th
          Fee Collectable
        %th
          EWI Collected
        %th
          Over Due EMI Collected
        %th
          Fee Collected
        %th
          Advance Amount
        %th
          Other Fee Collected
        %th
          ForeClosure POS
        %th
          ForeClosure OD Interest
        %th
          Total Collected
        %th
          Short Collections
        %th
          Differences

    %tbody
      - accumulate_row_values = Hash.new(MoneyManager.default_zero_money)
      - @default_currency ||= MoneyManager.get_default_currency
      - @data[:branches].sort_by{|branch| branch}.each do |branch, values|
        %tr
          %td
            %b
              = values[:branch_name]
          %td
            = values[:ewi_schedule]
            - accumulate_row_values[:ewi_schedule] += values[:ewi_schedule]
          %td
            = values[:ewi_advance]
            - accumulate_row_values[:ewi_advance] += values[:ewi_advance]
          %td
            = values[:overdue_ftd]
            - accumulate_row_values[:overdue_ftd] += values[:overdue_ftd]
          %td
            = values[:overdue_amt]
            - accumulate_row_values[:overdue_amt] += values[:overdue_amt]
          %td
            = values[:ewi_due]
            - accumulate_row_values[:ewi_due] += values[:ewi_due]
          %td
            = values[:fee_collectable]
            - accumulate_row_values[:fee_collectable] += values[:fee_collectable]
          %td
            = values[:ewi_collected]
            - accumulate_row_values[:ewi_collected] += values[:ewi_collected]
          %td
            = values[:overdue_ewi_collected]
            - accumulate_row_values[:overdue_ewi_collected] += values[:overdue_ewi_collected]
          %td
            = values[:fee_collected]
            - accumulate_row_values[:fee_collected] += values[:fee_collected]
          %td
            = values[:advance_amount]
            - accumulate_row_values[:advance_amount] += values[:advance_amount]
          %td
            = values[:other_fees_collected]
            - accumulate_row_values[:other_fees_collected] += values[:other_fees_collected]
          %td
            = values[:fore_closure_pos]
            - accumulate_row_values[:fore_closure_pos] += values[:fore_closure_pos]
          %td
            = values[:fore_closure_od_interest]
            - accumulate_row_values[:fore_closure_od_interest] += values[:fore_closure_od_interest]
          %td
            = values[:total_collections]
            - accumulate_row_values[:total_collections] += values[:total_collections]
          %td
            = values[:short_collections]
            - accumulate_row_values[:short_collections] += values[:short_collections]
          %td
            = values[:fee_differences]
            - accumulate_row_values[:fee_differences] += values[:fee_differences]

    - total_rows = Money.add_money_hash_values(@default_currency, accumulate_row_values)
    %tfoot
      %tr
        %th
          Total
        %td
          = total_rows[:ewi_schedule]
        %td
          = total_rows[:ewi_advance]
        %td
          = total_rows[:overdue_ftd]
        %td
          = total_rows[:overdue_amt]
        %td
          = total_rows[:ewi_due]
        %td
          = total_rows[:fee_collectable]
        %td
          = total_rows[:ewi_collected]
        %td
          = total_rows[:overdue_ewi_collected]
        %td
          = total_rows[:fee_collected]
        %td
          = total_rows[:advance_amount]
        %td
          = total_rows[:other_fees_collected]
        %td
          = total_rows[:fore_closure_pos]
        %td
          = total_rows[:fore_closure_od_interest]
        %td
          = total_rows[:total_collections]
        %td
          = total_rows[:short_collections]
        %td
          = total_rows[:fee_differences]
  %br
  .flickr_pagination
    =# will_paginate @data[:branch_ids], :container => false
  %br
:javascript
  $('table.loan_ecum').dataTable({
      "bPaginate": false,
      "bJQueryUI": true
    });

%h1 Details of Tranch: #{@tranch.name}

- @funder = @tranch.new_funding_line.new_funder
- @funding_line = @tranch.new_funding_line

.menu-strip{:style => "width:8%;"}
  = link_to_with_rights "Back", url("new_funders/#{@funder.id}/new_funding_lines/#{@funding_line.id}"), :class => "grey_button"

%table.tall.shaded
  %tr
    %th
      Tranch ID
    %td
      = @tranch.id
  %tr
    %th
      Amount
    %td
      = @tranch.tranch_money_amount
  %tr
    %th
      Interest Rate
    %td
      = @tranch.interest_rate
  %tr
    %th
      Disbursal Date
    %td
      = @tranch.disbursal_date
  %tr
    %th
      First Payment Date
    %td
      = @tranch.first_payment_date
  %tr
    %th
      Last Payment Date
    %td
      = @tranch.last_payment_date
  %tr
    %th
      Assignment Type
    %td
      = @tranch.assignment_type.humanize rescue nil

%div.tab_container.shaded
  %ul.tabs
    %li#loans Loans
    %li#history History

  %div.tab
    - if @lendings.blank? or @lendings.nil?
      %h3
        No loan exists
    - else
      %table.report.weeksheet.nojs.loan_ecum
        %thead
          %tr
            %th
            %th
              Loan id
            %th
              Applied Amount
            %th
              Borrower
            %th
              Applied Date
            %th
              First Repayment Date
            %th
              Scheduled Disbursal Date
            %th
              Repayment Frequency
            %th
              Tenure
            %th
              Administered At
            %th
              Accounted At
            %th
              Loan Status
            %th
              Loan Assignment Status
        - loan_row_count = 1
        - @lendings.each do |lending|
          - lending = lending.class == Lending ? lending : Lending.get(lending)
          %tr
            %td
              = loan_row_count
            %td
              = link_to_with_rights lending.id, resource(lending)
            %td
              = lending.to_money[:applied_amount].to_s
            %td
              = link_to lending.borrower.name, url(:controller => :new_clients, :action => :show, :id => lending.borrower.id)
            %td
              = lending.applied_on_date
            %td
              = lending.scheduled_first_repayment_date
            %td
              = lending.scheduled_disbursal_date
            %td
              = lending.repayment_frequency
            %td
              = lending.tenure
            %td
              = link_to_with_rights lending.administered_at_origin_location.name, url(:controller => :user_locations, :action => :weeksheet_collection, :id => lending.administered_at_origin)
            %td
              = link_to_with_rights lending.accounted_at_origin_location.name, url(:controller => :user_locations, :action => :show, :id => lending.accounted_at_origin)
            %td
              = lending.status.humanize
            %td
              = loan_assignment_facade.loan_assignment_status_message(lending.id)
            - loan_row_count = loan_row_count + 1
        %tfoot
          %tr.org_total
            %td{:colspan => 13}

  %div.tab
    %br
    %table.report.nojs{:width => "100%"}
      %tr
        %th
          For
        %th
          Action
        %th
          Changes
        %th
          Date
        %th
          User
      - id = @tranch.id
      - model = "NewTranch"
      - @obj = Kernel.const_get(model).get(id)
      - @trails = AuditTrail.all(:auditable_id => id, :auditable_type => model, :order => [:created_at.desc])
      - @trails.each do |trail|
        %tr
          %td
            = link_to_with_rights "#{@tranch.name} (Id: #{@tranch.id})", url(:controller => :new_tranches, :action => "show", :id => trail.auditable_id)
          %td.text
            %span{:class => get_status_class([:delete, :create, :update].index(trail.action))}
              = trail.action
          %td.text
            %table{:width => '100%'}
              - change = []
              - trail.changes.each do |x|
                - next if x.keys.include?(:amount)
                - change << x
              = diff_display(change, @obj, trail.action)
          %td
            = trail.created_at.strftime("%d-%m-%Y %H:%M")
          %td
            = trail.user ? trail.user.login : "admin"
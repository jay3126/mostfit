- @journals = []
- journal_ids = Posting.all("account_id" => @account.id).aggregate(:journal_id)
- if journal_ids.empty?
  No Journal Entries Found
- else
  - @journals = Journal.all(:id => journal_ids, :order => [:date.desc]).paginate(:page => params[:page], :per_page => 25)
  = paginate @journals
  %table.narrow.form
    %tr
      %th
        id
      %th
        Recorded at
      %th
        Date
      %th 
        Description
      %th{:colspan => 2} 
        Account Debit
      %th{:colspan => 2}
        Account Credit
    - counter = 0
    - @journals.each do |journal|
      - postings = Posting.all(:journal_id => journal.id).group_by{|x| x.amount>0 ? :credit : :debit}
      - date_format = Mfi.first.date_format || "%d-%m-%Y"
      - time_format = date_format + " %H:%M"
      - counter += 1 
      - set_class = counter % 2 == 1 ? 'odd' : 'even'
      - postings_count = postings[:debit].size + postings[:credit].size
      - rowspan_count = postings_count + 1
      %tr{:class => set_class}
        %td{:rowspan => rowspan_count}
          = journal.id
        %td{:rowspan => rowspan_count}
          = journal.created_at.strftime(time_format)
        %td{:rowspan => rowspan_count}
          = journal.date.strftime(date_format)
        %td{:rowspan => rowspan_count} 
          = journal.comment
      - (postings[:debit] || []).each do |p|
        %tr{:class => set_class}
          %td 
            = p.account.name if p.account
          %td
            = p.amount.to_account_balance
          %td{:colspan => 2}
      - (postings[:credit] || []).each do |p|
      
        %tr{:class => set_class}
          %td{:colspan => 2}
          %td
            = p.account.name if p.account
          %td
            = p.amount.to_account_balance
   
  = paginate @journals

:javascript
  $(document).ready(function() {
  $('#toggle_select_to_verify').change(function() {
    $('.select_to_verify').attr('checked',$(this).attr('checked'))});
  });

%h1= "Claim Processing"
.menu-strip{:style => "width:8%;"}
  = link_to_with_rights "Back", url(:admin), :class => "grey_button"
.shaded
  %h2= "Death Claim Documents Pending:"
  %i Note: Upon receipt of Death Claim Documents due generation of client loan will be stopped.
  - unless @deceased_clients.blank?
    = form(:action => url(:controller => 'new_clients', :action => 'mark_claim_documents_recieved'), :method => :post) do
      %table.unsortable
        %thead
          %tr
            %th
              = "Select All"
              %br
              = "(Documents Recieved)"
              = check_box :id => "toggle_select_to_verify"
            %th
              = "Documents Recieved On"
            %th
              = "Client"
            %th
              = "Branch"
            %th
              = "Center"
            %th
              = "Deceased Person"
            %th
              = "Relationship to client"
            %th
              = "Date Of Death"
            %th
              = "Death Event Reported On"
            %th
              = "Death Event Registered By"
            %th
              = "Claim Unique ID"
            %th
              = "Claim Filed On"
            %th
              = "Claim Status"
            %th
              = "Claim Filed By"
        %tbody
          - s_no = 0
          - @deceased_clients.each do |client|
            - death_event = client.death_event
            - claim = death_event.insurance_claim ? death_event.insurance_claim : nil
            - location_object = ClientAdministration.get_administration_on_date(client)
            - unless client.claim_document_status == Constants::Client::CLAIM_DOCUMENTS_RECEIVED
              %tr
                %td
                  - if client_facade.client_has_outstanding_loan?(client)
                    - unless claim.blank?
                      - unless client.simple_insurance_policies.blank?
                        - outstanding_loan = client_facade.get_all_counterparty_outstanding_loan(client)
                        - first_loan = outstanding_loan.last
                        - unless first_loan.simple_insurance_policies.blank?
                          - policy = first_loan.simple_insurance_policies.all(:lending_id=> first_loan.id).first
                          - result = false
                          - if (policy.insurance_for == Constants::Insurance::INSURED_CLIENT && client_facade.death_event_filed_for(client) == "Client")
                            - result = true
                          - elsif (policy.insurance_for == Constants::Insurance::INSURED_GUARANTOR && client_facade.death_event_filed_for(client) == "Guarantor")
                            - result = true
                          - elsif (policy.insurance_for == Constants::Insurance::INSURED_CLIENT_AND_GUARANTOR)
                            - result = true
                          - if result == true
                            = check_box :name => "clients[#{client.id}]", :class => "select_to_verify"
                          - else
                            %span.greytext
                              = "#{client_facade.death_event_filed_for(client)} is not insured"
                        - else
                          %span.greytext
                            = "client is not insured"
                      - else
                        %span.greytext
                          = "No Insurance Policy"
                    - else
                      %span.greytext
                        = "No Claim Filed"
                  - else
                    %span.greytext
                      = "Client has no Active Loan"
                %td
                  = date_select "document_recieved_on[#{client.id}]", Date.today, :max_date => Date.today, :id => "document_recieved_on#{client.id}", :size => 10
                %td
                  = link_to_with_rights client.name, url(:controller => :new_clients, :action => :show, :id => client.id)
                %td
                  = link_to_location location_object.registered_at_location
                %td
                  = link_to_location location_object.administered_at_location
                %td
                  = death_event.deceased_name
                %td
                  = death_event.relationship_to_client
                %td
                  = death_event.date_of_death
                %td
                  = death_event.reported_on
                %td
                  = StaffMember.get(death_event.reported_by).name rescue nil
                %td{:style => "text-align:center;"}
                  = claim.nil? ? "-" : claim.claim_unique_id
                %td{:style => "text-align:center;"}
                  = claim.nil? ? "-" : claim.filed_on
                %td{:style => "text-align:center;"}
                  = claim.nil? ? "-" : claim.claim_status.humanize rescue nil
                %td{:style => "text-align:center;"}
                  = claim.nil? ? "-" : StaffMember.get(claim.performed_by).name rescue nil
      = submit 'Submit'
  - else
    %h3 No clients found

%br
= partial :all_settled_claims
